# Nome do Workflow
name: Deploy Hugo site to Pages

# Gatilho: Rodar sempre que houver um push na branch 'main'
on:
  push:
    branches:
      - main
  # Permite que você rode este workflow manualmente pela aba Actions no GitHub
  workflow_dispatch:

# Permissões para o token do GitHub Actions
permissions:
  contents: read
  pages: write
  id-token: write

# Configuração para permitir apenas um deploy por vez
concurrency:
  group: "pages"
  cancel-in-progress: true

# Tarefas (Jobs) a serem executadas
jobs:
  # Tarefa de compilação (build)
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Baixa o código do seu repositório
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true  # ESSENCIAL: Baixa o tema que é um submódulo
          fetch-depth: 0    # Necessário para o Hugo obter o histórico completo

      # 2. Configura o Node.js
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      # 3. Instala as dependências do tema
      - name: Install Node Dependencies
        run: npm install

      # --- PASSO ADICIONADO AQUI ---
      # 4. Garante que o TailwindCSS seja executável
      - name: Make TailwindCSS executable
        run: chmod +x ./node_modules/.bin/tailwindcss

      # 5. Instala o Hugo
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: 'latest'
          extended: true

      # 6. Compila o site
      - name: Build
        run: hugo --minify

      # 7. Envia o site compilado para o GitHub Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Tarefa de deploy
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4